import React, { Suspense } from "react";
import ImageUpload from "./image-upload";
import Image from "next/image";
import { Button } from "./button";
import { AnimatePresence, motion } from "framer-motion";

type MultipleImageUploadProps = {
  max: number;
  value: any;
  onChange: any;
};

const MultipleImageUpload: React.FC<MultipleImageUploadProps> = ({
  max,
  onChange,
  value,
}) => {
  return (
    <div className="grid grid-cols-3 gap-2">
      <AnimatePresence>
        {value.map((image: any, index: number) => (
          <motion.div
            initial={ { opacity: 0, scale: 0.5 } }
            animate={ { opacity: 1, scale: 1 } }
            exit={ { opacity: 0, scale: 0.5 } }
            transition={ { duration: 0.3, ease: "backInOut" } }
            key={index}
            className="size-full overflow-hidden rounded-xl aspect-square relative group"
          >
            <Button
              onClick={() => {
                const images = value.filter(
                  (_: string, i: number) => i !== index
                );
                onChange(images);
              } }
              type="button"
              className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 z-[10] group-hover:opacity-100 opacity-0 transition-all duration-300 ease-out"
              size={"sm"}
              variant="outline"
            >
              Remove
            </Button>
            <Image
              width={1000}
              height={1000}
              src={image}
              className="size-full object-cover"
              alt="uploaded image"
            />
          </motion.div>
        ))}
      </AnimatePresence>
      {value.length >= max ? null : (
        <Suspense fallback={""} key={value.length}>
          <AnimatePresence>
            <motion.div
              initial={ { opacity: 0, scale: 0.5 } }
              animate={ { opacity: 1, scale: 1 } }
              exit={ { opacity: 0, scale: 0.5 } }
              transition={ { duration: 0.3, ease: "backInOut", delay: 0.4 } }
              className="aspect-square group relative"
            >
              <ImageUpload
                onChange={(image: any) => {
                  const images = [...value, image];
                  onChange(images);
                } }
              />
            </motion.div>
          </AnimatePresence>
        </Suspense>
      )}
    </div>
  );
};

export default MultipleImageUpload;
