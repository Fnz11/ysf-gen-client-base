import React from "react";
import { motion } from "framer-motion";
import { Card } from "@/components/ui/card";
import { cn } from "@/lib/utils";
import { useMediaQuery } from "@custom-react-hooks/use-media-query";
import { LucideProps } from "lucide-react";

type PreviewContainerProps = {
  className?: string;
  children: React.ReactNode;
  classNameCard?: string;
  open?: boolean;
  title?: string;
  TitleIcon?: React.ForwardRefExoticComponent<
    Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>
  >;
};

const PreviewContainer: React.FC<PreviewContainerProps> = ({
  children,
  className,
  classNameCard,
  title,
  TitleIcon,
  open,
}) => {
  const isDesktop = useMediaQuery("(min-width: 768px)");
  return (
    <>
      <motion.div
        initial={  { opacity: 0, width: 0 }  }
        animate={
          isDesktop
            ? { opacity: 1, width: "35%" }
            : { opacity: 1, width: "99%" }
        }
        exit={  { opacity: 0 }  }
        className={cn(
          ` ${
            open ? "md:w-[35%] w-[99%] opacity-100" : "md:w-0 w-[99%] opacity-0"
          } relative overflow-hidden flex flex-col gap-4 p-4 h-full transition-all duration-500 ease-out`,
          className
        )}
      >
        <h1 className="font-medium text-2xl mb-[-1rem] flex items-center justify-center w-fit gap-2">
          {TitleIcon && <TitleIcon className="h-7 w-7 text-primary" strokeWidth={1.2} />} {title}
        </h1>
        <Card
          className={cn("w-full h-full flex flex-col gap-6", classNameCard)}
        >
          {children}
        </Card>
      </motion.div>
    </>
  );
};

export default PreviewContainer;
